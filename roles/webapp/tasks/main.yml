---
- name: WEBAPP | Create webapp and config directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
  loop:
    - "{{ webapp_dest }}"
    - "{{ api_dest }}"
    - /etc/motec
- name: WEBAPP | Create Python virtual environment for API
  ansible.builtin.command:
    cmd: python3 -m venv {{ api_venv_path }}
    creates: "{{ api_venv_path }}/bin/pip"
- name: WEBAPP | Copy webapp requirements file
  ansible.builtin.copy:
    src: webapp-requirements.txt
    dest: "{{ api_dest }}/requirements.txt"
    mode: "0644"
- name: WEBAPP | Install Python dependencies from requirements file
  ansible.builtin.pip:
    requirements: "{{ api_dest }}/requirements.txt"
    executable: "{{ api_venv_path }}/bin/pip3"
- name: WEBAPP | Create initial runtime settings file
  ansible.builtin.template:
    src: service_settings.json.j2
    dest: "{{ settings_file_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0664"
- name: WEBAPP | Copy API script
  ansible.builtin.template:
    src: api.py.j2
    dest: "{{ api_dest }}/api.py"
    mode: "0755"
- name: WEBAPP | Copy GT7 support library
  ansible.builtin.copy:
    src: gt7
    dest: "{{ api_dest }}"
    mode: "0755"

- name: WEBAPP | Copy web UI file to web root
  ansible.builtin.template:
    src: index.html.j2
    dest: "{{ webapp_dest }}/index.html"
    mode: "0644"
- name: WEBAPP | Create systemd service file for webapp
  ansible.builtin.template:
    src: motec-webapp.service.j2
    dest: /etc/systemd/system/motec-webapp.service
    force: true
    mode: "0644"
- name: WEBAPP | Create nginx server block
  ansible.builtin.template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-available/motec_webapp
    force: true
    mode: "0644"
- name: WEBAPP | Remove default nginx site
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
- name: WEBAPP | Enable nginx site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/motec_webapp
    dest: /etc/nginx/sites-enabled/motec_webapp
    state: link
- name: WEBAPP | Allow API user to control systemd service
  ansible.builtin.copy:
    dest: /etc/sudoers.d/motec_webapp_sudo
    content: >
      {{ ansible_user }} ALL=(ALL) NOPASSWD: /usr/bin/systemctl start sim-to-motec.service,
      /usr/bin/systemctl stop sim-to-motec.service, /usr/bin/systemctl restart sim-to-motec.service,
      /usr/bin/systemctl is-active sim-to-motec.service, /usr/bin/journalctl -u sim-to-motec.service
    mode: "0440"
- name: WEBAPP | Ensure all services are reloaded and started
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: restarted
    daemon_reload: true
    enabled: true
  loop:
    - motec-webapp.service
    - nginx

- name: Copy health-check scripts to remote
  copy:
    src: scripts/
    dest: "{{ repo_path }}/scripts/"
    owner: root
    group: root
    mode: '0755'

- name: Run quick health check
  shell: "{{ repo_path }}/scripts/diagnose_quick.sh"
  register: quick_check
  ignore_errors: yes

- name: On quick check failure, run full diagnose
  shell: "{{ repo_path }}/scripts/diagnose.sh"
  when: quick_check.rc != 0
